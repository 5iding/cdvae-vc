{
    "model": "CDVAE",
    "model_module": "model.cdvae",
    "trainer": "VAETrainer",
    "trainer_module": "trainer.vae",
    "stats": "./data/vcc2018/stats/stats.h5",
    "spklist": "./data/vcc2018/conf/spk.list",

    "z_dim": 16,
	"y_dim": 12,
	"y_emb_dim": 16,
    "encoder": {
        "sp":{
            "kernel": [[3, 1], [3, 1], [3, 1], [3, 1], [3, 1]],
            "stride": [[1, 1], [1, 1], [1, 1], [1, 1], [1, 1]],
            "output": [1024, 512, 256, 64, 32]
        },
        "mcc":{
            "kernel": [[3, 1], [3, 1], [3, 1], [3, 1], [3, 1]],
            "stride": [[1, 1], [1, 1], [1, 1], [1, 1], [1, 1]],
            "output": [512, 256, 128, 64, 32]
        }
	},
	"generator": {
        "sp":{
            "kernel": [[3, 1], [3, 1], [3, 1], [3, 1], [3, 1]],
            "stride": [[1, 1], [1, 1], [1, 1], [1, 1], [1, 1]],
            "output": [128, 256, 512, 1024, 513]
        },
        "mcc":{
            "kernel": [[3, 1], [3, 1], [3, 1], [3, 1], [3, 1]],
            "stride": [[1, 1], [1, 1], [1, 1], [1, 1], [1, 1]],
            "output": [64, 128, 256, 512, 34]
        }
    },
	"training": {
        "train_file_pattern": ["./data/vcc2018/bin/VAD/*/[12]00[0-6]?.bin",
                               "./data/vcc2018/bin/VAD/*/[12]0070.bin"],
        "valid_file_pattern": ["./data/vcc2018/bin/VAD/*/[12]007[1-9].bin",
                               "./data/vcc2018/bin/VAD/*/[12]008[0-1].bin"],
		"batch_size": 16,
        "crop_length": 128, 
		"lr": 1e-4,
		"beta1": 0.5,
		"beta2": 0.999,
		"max_iter": 100000,
        "save_freq": 10000, 
        "summary_freq": 100, 
        "log_freq": 1000
	},
    "conversion": {
        "test_file_pattern": "./data/vcc2018/bin/noVAD/{}/3*.bin"
    },
    "feat_param":{
        "fs": 22050,
        "shiftms": 5,
        "fftl": 1024,
        "mcep_alpha": 0.455,
        "mcep_dim": 34,
        "feat_dim": 1064,
        "dim":{
            "sp": 513,
            "mcc": 34,
            "feat": 1064
        }
    },
    "normalizer":{
        "sp": {
            "type": ["minmax"]
        },
        "mcc": {
            "type": ["minmax"]
        }
    }
}
